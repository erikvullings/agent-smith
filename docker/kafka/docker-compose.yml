---
version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - "3500:3500"
    environment:
      ZOOKEEPER_CLIENT_PORT: 3500
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - "3501:3501"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:3500"
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:3501,PLAINTEXT://broker:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_LISTENERS: "EXTERNAL://0.0.0.0:3501,PLAINTEXT://0.0.0.0:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 100000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 100000000

  schema_registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema_registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "3502:3502"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:3502"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:3500"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:9092"

  kafka_rest:
    image: confluentinc/cp-kafka-rest:latest
    hostname: kafka_rest
    depends_on:
      - zookeeper
      - schema_registry
      - broker
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest
      KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://broker:9092"
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:3500"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema_registry:3502"
      KAFKA_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"

  kafka_topics_ui:
    image: landoop/kafka-topics-ui:latest
    hostname: kafka_topics_ui
    depends_on:
      - kafka_rest
    ports:
      - "3600:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka_rest:8082"
      PROXY: "true"
      MAX_BYTES: 10485760 # Maximum number of bytes to store per topic (10Mb)

  kafka_schema_registry_ui:
    image: landoop/schema-registry-ui:latest
    hostname: kafka_schema_registry_ui
    depends_on:
      - schema_registry
    ports:
      - "3601:8000"
    environment:
      SCHEMAREGISTRY_URL: "http://schema_registry:3502"
      PROXY: "true"

  # postgres:
  #   image: postgres:9.6
  #   hostname: postgres
  #   ports:
  #     - "5432:5342"
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: TRIAL_ADMIN
  #   volumes:
  #      - postgres-data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # admintool:
  #   image: drivereu/test-bed-admin:latest
  #   depends_on:
  #     - postgres
  #     - broker
  #     - schema_registry
  #   ports:
  #     - "8090:8090"
  #   environment:
  #     KAFKA_BROKER_URL: broker:9092
  #     SCHEMA_REGISTRY_URL: http://schema_registry:3502
  #     # These env. are only in the secure TTI used
  #     zookeeper_host: zookeeper
  #     zookeeper_port: 3500
  #     testbed_secure_mode: 'DEVELOP'
  #     testbed_init_auto: 'false'
  #     management_ca_cert_path: http://localhost:9090
  #     cert_handler_url: https://localhost:8443
  #     security_rest_path: https://localhost:9443

  # afteractionreview:
  #   image: drivereu/after-action-review:latest
  #   depends_on:
  #     - postgres
  #     - broker
  #     - schema_registry
  #   ports:
  #     - "8095:8095"
  #   environment:
  #     KAFKA_BROKER_URL: broker:9092
  #     SCHEMA_REGISTRY_URL: http://schema_registry:3502

  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_LISTEN_PORT: 5050
  #     PGADMIN_DEFAULT_EMAIL: "pgadmin@driver.eu"
  #     PGADMIN_DEFAULT_PASSWORD: "admin"
  #   ports:
  #     - "5050:5050"

  time_service:
    image: drivereu/test-bed-time-service:latest
    depends_on:
      - broker
      - schema_registry
    ports:
      - "8100:8100"
    environment:
      KAFKA_BROKER_URL: broker:9092
      SCHEMA_REGISTRY_URL: http://schema_registry:3502
      AUTO_REGISTER_SCHEMAS: "true"

  # trial_management_tool:
  #   image: drivereu/trial-management-tool:latest
  #   depends_on:
  #     - broker
  #     - schema_registry
  #   ports:
  #     - "3210:3210"
  #   environment:
  #     CLIENT_ID: TB-TrialMgmt
  #     KAFKA_HOST: broker:9092
  #     SCHEMA_REGISTRY: http://schema_registry:3502
  #     TRIAL_MANAGER_SERVER_PORT: 3210
  #     PRODUCE: simulation_session_mgmt,simulation-time-control,simulation-time-mgmt,simulation-entity-post,system_tm_role_player,large_data_update
  #     SSL: "false"
  #     SSL_PFX: certs/TB-TrialMgmt.p12
  #     SSL_PASSPHRASE: changeit
  #     SSL_CA: certs/test-ca.pem
  #   volumes:
  #     - trial-data:/app/trials

  # copper_gui:
  #   image: drivereu/copper-gui:0.0.5
  #   hostname: copper_gui
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - broker
  #     - schema_registry
  #     - copper_server
  #   environment:
  #     VUE_APP_COPPER_LAYER_URL: "'http://localhost:3007'"
  #     VUE_APP_COPPER_LOG_URL: "'http://localhost:3007/logs'"
  #     VUE_APP_COPPER_SOCKET_SERVER_URL: "'http://localhost:3007'"
  #   command:
  #     [
  #       'sh',
  #       '-c',
  #       'echo "var VUE_APP_COPPER_LAYER_URL=$$VUE_APP_COPPER_LAYER_URL;var VUE_APP_COPPER_LOG_URL=$$VUE_APP_COPPER_LOG_URL;var VUE_APP_COPPER_SOCKET_SERVER_URL=$$VUE_APP_COPPER_SOCKET_SERVER_URL" > /copper/global-vars-copper.js && http-server /copper',
  #     ]

  copper_server:
    image: tnocs/copper
    depends_on:
      - broker
      - schema_registry
      - silent-producer
    ports:
      - '3008:3008'
    environment:
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: http://schema_registry:3502      
      COPPER_SERVER_PORT: 3008
      COPPER_CLIENT_ID: Copper
      LAYER_SERVER_CONFIG_FOLDER: '../../configs/layers'
      SSL: 'false'
    volumes:
      - ./configs:/app/configs

  silent-producer:
    image: drivereu/silent-producer:latest
    depends_on:
      - broker
      - schema_registry
    environment:
      KAFKA_HOST: broker:9092
      SCHEMA_REGISTRY: http://schema_registry:3502
      PRODUCE_TOPICS: simulation_entity_item,simulation_time_mgmt,system_topic_access_invite
      # simulation_request_transport,simulation_request_startinject,lcms_plots,simulation_affected_area,simulation_sumo_configuration,standard_cap,chain_power,chain_care,chain_flood,chain,flood_prediction_geojson,flood_actual,simulation_entity_post
    restart: on-failure
    volumes:
      - ./schemas:/src/schemas

  driving:
    image: osrm/osrm-backend
    ports:
      - "5000:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/netherlands-latest.osrm
    volumes:
      - ./driving:/data

  cycling:
    image: osrm/osrm-backend
    ports:
      - "5001:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/netherlands-latest.osrm
    volumes:
      - ./cycling:/data

  walking:
    image: osrm/osrm-backend
    ports:
      - "5002:5000"
    command:
      - osrm-routed
      - --algorithm
      - mld
      - /data/netherlands-latest.osrm
    volumes:
      - ./walking:/data
 
  large_file_service:
    image: drivereu/large-file-service:latest
    ports:
      - "9090:9090"
    # environment:
    #   HOST: localhost
    #   PORT: 9090
  # webmail:
  #   image: drivereu/driver-roundcube:0.0.1
  #   hostname: webmail
  #   container_name: webmail
  #   environment:
  #     - ROUNDCUBEMAIL_DEFAULT_HOST=10.5.0.5
  #     - ROUNDCUBEMAIL_SMTP_SERVER=10.5.0.5
  #     - ROUNDCUBEMAIL_DEFAULT_PORT=143
  #     - ROUNDCUBEMAIL_SMTP_PORT=25
  #   ports:
  #     - "80:80"
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.6
  #     default:
  #     backend:
  #   depends_on:
  #     - mailserver
  # mailserver:
  #   image: drivereu/driver-mailserver:0.0.1
  #   hostname: dockermail
  #   domainname: driver.eu
  #   container_name: mailserver
  #   ports:
  #     - "25:25"
  #     - "143:143"
  #     - "587:587"
  #     - "993:993"
  #     - "3000:3000"
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.5
  #     default:
  #     backend:
  #   volumes:
  #     - maildata:/var/mail
  #     - mailstate:/var/mail-state
  #     - mailconfig/:/tmp/docker-mailserver/
  #   environment:
  #     - DMS_DEBUG=1
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_PTRACE
  #   restart: always
  # mailgateway:
  #   image: drivereu/driver-mailgateway:0.0.1
  #   container_name: mailgateway
  #   ports:
  #     # websocket notifications
  #     - "9996:9996"
  #     # REST api
  #     - "7891:7891"
  #   environment:
  #     - ApiMailServerUrl=http://10.5.0.5:3000
  #     - LargeFileServiceUrl=http://large_file_service:9090/upload
  #     - SmtpHost=10.5.0.5
  #     - SmtpPort=25
  #     - IMapHost=10.5.0.5
  #     - IMapPort=993
  #     - kafka_kafkaHost=broker:9092
  #     - kafka_schemaRegistryUrl=schema_registry:3502
  #     - kafka_mediaTopicName=simulation_entity_post
  #     - kafka_connectToKafka=true
  #     - server_port=7891
  #   depends_on:
  #     - mailserver
  #     - broker
  #     - large_file_service
  #     - schema_registry
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.10
  #     default:
  #   restart: always
  # mailmonitor:
  #   image: drivereu/driver-mailmonitor:0.0.1
  #   container_name: mailmonitor
  #   ports:
  #     - "4200:4200"
  #   links:
  #     - mailgateway
  #   depends_on:
  #     - mailgateway
  #   networks:
  #     static-network:
  #       ipv4_address: 10.5.0.11
  #     default:
  #     backend:
  #   restart: always
volumes:
  # postgres-data:
  trial-data:
  maildata:
  mailstate:
  mailconfig:

networks:
  static-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
  backend:
    driver: "bridge"
